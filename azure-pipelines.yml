trigger:
- master

jobs:
- job: vs2019_build
  displayName: VS2019 Build
  condition: succeeded()
  pool: Hosted
  timeoutInMinutes: 240
  steps:
  - task: NuGetToolInstaller@1
    inputs:
      versionSpec: '4.9.4'
      checkLatest: true
  - powershell: |
      Write-Host "Installing .NET Core 5.0.100-preview.4.20202.8 SDK..." -ForegroundColor Cyan
      Write-Host "Downloading..."
      $exePath = "$env:TEMP\dotnet-sdk-5.0.100-preview.4.20202.8-win-x64.exe"
      (New-Object Net.WebClient).DownloadFile('https://dotnetcli.blob.core.windows.net/dotnet/Sdk/5.0.100-preview.4.20202.8/dotnet-sdk-5.0.100-preview.4.20202.8-win-x64.exe', $exePath)
      Write-Host "Installing..."
      cmd /c start /wait "$exePath" /quiet /norestart
      del $exePath
      Write-Host "Installed" -ForegroundColor Green
    displayName: 'Download and install .NET Core 5 Preview 4.'
  - task: NuGetCommand@2
    inputs:
      command: 'restore'
      solution: 'GitInformation.sln'
  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: 'GitInformation.sln'
      arguments: '--configuration Release'
    displayName: 'build'
# TODO: deploy to nuget when there is a tag build? Or have AppVeyor do the packaging to nuget? MyGet support too???
#  - task: PublishPipelineArtifact@0
#    displayName: 'Publish Pipeline Artifact: test artifacts'
#    inputs:
#      artifactName: 'windows-artifacts'
#      targetPath: '$(Build.SourcesDirectory)\artifacts'
#  - task: PublishPipelineArtifact@0
#    displayName: 'Publish Pipeline Artifact: git-sdk-64-minimal'
#    inputs:
#      artifactName: 'git-sdk-64-minimal'
#      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
#  - powershell: |
#      if ("$GITFILESHAREPWD" -ne "" -and "$GITFILESHAREPWD" -ne "`$`(gitfileshare.pwd)") {
#        cmd /c rmdir "$(Build.SourcesDirectory)\test-cache"
#      }
#    displayName: 'Unmount test-cache'
#    condition: true
